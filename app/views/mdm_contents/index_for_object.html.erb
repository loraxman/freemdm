  
<div id="mdm_index"  >
   <h1><%= @mdm_object.name %></h1>
    <div ng-controller="IndexObjectCtrl" ng-bind-html-unsafe="data" ng-click="form_detail('http://www-google.com')" >
    
      <table class="table table-striped object_list" >
        <tr >
            <% for col in @mdm_object.mdm_columns %>
                <td><span style="font-weight:bold;"><%= col.name %></span></td>
            <% end %>
        </tr>
      
        <tr  ng-repeat="item in data "  ng-click="form_detail('<%= @mdm_object.name %>',<%= @mdm_object.mdm_primary_keys.collect{|x| x.mdm_column.name }%>, item)" >
            <td ng-click="form_detailx('http://www-google.com')" ng-repeat="col in item">{{col}}</td>
        </tr>
        
       </table>
       
         <pagination boundary-links="true" 
    max-size="3" 
    items-per-page="15"
    total-items="totitems" 
    ng-model="currentPage" 
    ng-change="pageChanged(currentPage)"></pagination>
    </div>
</div>


<div ng-controller="DatepickerDemoCtrl">
    <pre>Selected date is: <em>{{dt | date:'fullDate' }}</em></pre>

    <h4>Inline</h4>
    <div style="display:inline-block; min-height:290px;">
        <datepicker ng-model="dt" min-date="minDate" show-weeks="true" class="well well-sm"></datepicker>
    </div>

    <h4>Popup</h4>
    <div class="row">
        <div class="col-md-6">
            <p class="input-group">
              <input type="text" class="form-control" datepicker-popup="{{format}}" ng-model="dt" is-open="opened" min-date="minDate" max-date="'2015-06-22'" datepicker-options="dateOptions" date-disabled="disabled(date, mode)" ng-required="true" close-text="Close" />
              <span class="input-group-btn">
                <button type="button" class="btn btn-default" ng-click="open($event)"><i class="glyphicon glyphicon-calendar"></i></button>
              </span>
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>Format:</label> <select class="form-control" ng-model="format" ng-options="f for f in formats"><option></option></select>
        </div>
    </div>

    <hr />
    <button type="button" class="btn btn-sm btn-info" ng-click="today()">Today</button>
    <button type="button" class="btn btn-sm btn-default" ng-click="dt = '2009-08-24'">2009-08-24</button>
    <button type="button" class="btn btn-sm btn-danger" ng-click="clear()">Clear</button>
    <button type="button" class="btn btn-sm btn-default" ng-click="toggleMin()" tooltip="After today restriction">Min date</button>
</div>

<script>

var TabsDemoCtrl = function ($scope) {
  $scope.tabs = [
    { title:'Dynamic Title 1', content:'Dynamic content 1' },
    { title:'Dynamic Title 2', content:'Dynamic content 2', disabled: true }
  ];

  $scope.alertMe = function() {
    setTimeout(function() {
      alert('You\'ve selected the alert tab!');
    });
  };
};

var DatepickerDemoCtrl = function ($scope) {
  $scope.today = function() {
    $scope.dt = new Date();
  };
  $scope.today();

  $scope.clear = function () {
    $scope.dt = null;
  };

  // Disable weekend selection
  $scope.disabled = function(date, mode) {
    return ( mode === 'day' && ( date.getDay() === 0 || date.getDay() === 6 ) );
  };

  $scope.toggleMin = function() {
    $scope.minDate = $scope.minDate ? null : new Date();
  };
  $scope.toggleMin();

  $scope.open = function($event) {
    $event.preventDefault();
    $event.stopPropagation();

    $scope.opened = true;
  };

  $scope.dateOptions = {
    formatYear: 'yy',
    startingDay: 1
  };

  $scope.initDate = new Date('2016-15-20');
  $scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];
  $scope.format = $scope.formats[0];
};

function IndexObjectCtrl($scope,$http,$location, $window) {
    $scope.isCollapsed = true;
    $scope.noOfPages = 7;
    $scope.currentPage = 1;
    $scope.maxSize = 5;
    $scope.page = 1;
    $scope.totitems=15;
    
    $scope.$watch('currentPage', function(newPage){
        $scope.watchPage = newPage;
    
     });
  
    $scope.form_detail = function(mdmobject, mdmpkeys, item) {
        //alert(url);
        //  need to build url to call the form object
        // we have the object passed to us
        // we also need the name and keys
        // http://localhost:3000//mdm_contents/form_for_object?name=customer&keys[]=1
        var url = '/mdm_contents/form_for_object?name=' + mdmobject + "&keys[]=";
     //   console.log(mdmobject);
     //   console.log(item);
      //  console.log(mdmpkeys);
        for (var i=0;i<mdmpkeys.length;i++) {
            url += item[mdmpkeys[i]];
            if (i < mdmpkeys.length -1) 
                url += ",";
        }
        //alert (url);        
       $window.location.href = url;
     };
  
  
   $scope.pageChanged = function(page) {
        $scope.callbackPage = page;
    //    $scope.watchPage = newPage;
        $scope.getdata(page);
    
  };
  
    var loc = $location.absUrl();
    var apiurl=loc;
    if (apiurl.length > 90) {
        apiurl=apiurl[0] +'/api/mdm_objects' ;
    }
    else {
        apiurl = '/api/mdm_objects?name=<%= params[:name] %>&page=' + $scope.page ;
    }
    $http({method: 'GET', url: apiurl}).
    success(function(data, status, headers, config) {
      // this callback will be called asynchronously
      // when the response is available
      $scope.data = data;
      $scope.totitems += data.length;
      $scope.noOfPages = 1;
      
   
    });


    
    $scope.getdata= function(page) {
        var loc = $location.absUrl();
        var apiurl=loc;
        if (apiurl.length > 90) {
            apiurl=apiurl[0] +'/api/mdm_objects' ;
        }
        else {
            apiurl = '/api/mdm_objects?name=<%= params[:name] %>&page=' + page;
        }
        $http({method: 'GET', url: apiurl}).
        success(function(data, status, headers, config) {
          // this callback will be called asynchronously
          // when the response is available
          $scope.data = data;
          $scope.totitems += data.length;
          $scope.noOfPages + 1;
         
          
     });
     
     
     
     
    };



};
</script>